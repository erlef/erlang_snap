name: erlang
title: Erlang/OTP
base: core18
version: "${OTP_VERSION}"
summary: Erlang/OTP programming language and build tool Rebar3.
description: |
  Erlang is a programming language used to build massively scalable soft real-time systems with requirements on high availability. Some of its uses are in telecoms, banking, e-commerce, computer telephony and instant messaging. Erlang's runtime system has built-in support for concurrency, distribution and fault tolerance.
icon: snap/local/erlang_logo.svg

grade: stable
confinement: classic

parts:
  erlang:
    plugin: autotools
    source-type: tar
    source: https://github.com/erlang/otp/archive/OTP-${OTP_VERSION}.tar.gz
    build-packages:
      - g++
      - make
      - libssl-dev
      - libncurses-dev
    stage-packages:
      - openssl
      - ncurses-base
    configflags: [ --prefix=/usr ]
    override-build: |
      ./otp_build autoconf
      snapcraftctl build
      sed -i 's|ROOTDIR="/usr/lib/erlang"|ROOTDIR="$SNAP/usr/lib/erlang"|' $SNAPCRAFT_PART_INSTALL/usr/bin/erl
    prime:
      - usr/lib/erlang/*
      - usr/bin/*

  rebar3-libs:
    source: "https://github.com/erlang/rebar3/releases/download/${REBAR3_VERSION}/rebar3"
    # escripts are zip files of the libraries that make them up
    # this will result in a directory of all the rebar3 applications
    source-type: zip
    plugin: dump
    organize:
      '*': usr/lib/rebar3/
    prime:
      - usr/lib/rebar3/*

  rebar3:
    source: snap/local
    plugin: dump
    organize:
      rebar3: usr/bin/rebar3/
    prime:
      - usr/bin/rebar3

apps:
  erl:
    command: erl
    aliases: [erl]
  rebar3:
    command: rebar3
    aliases: [rebar3]
  escript:
    command: escript
    aliases: [escript]
  dialyzer:
    command: dialyzer
    aliases: [dialyzer]
  epmd:
    command: epmd
    aliases: [epmd]
  erlc:
    command: erlc
    aliases: [erlc]
  typer:
    command: typer
    aliases: [type]
  run-erl:
    command: run_erl
    aliases: [run_erl]
  to-erl:
    command: to_erl
    aliases: [to_erl]
  ct-run:
    command: ct_run
    aliases: [ct_run]
